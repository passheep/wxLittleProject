"use strict";
if (!Promise.prototype.finally) {
    Promise.prototype.finally = function (onfinally) {
        if (onfinally) {
            var P_1 = this.constructor;
            // tslint:disable
            return this.then(function (value) { return P_1.resolve(onfinally()).then(function () { return value; }); }, function (reason) { return P_1.resolve(onfinally()).then(function () { throw reason; }); });
        }
        else {
            return this;
        }
    };
}
//# sourceMappingURL=promise.finally.js.map