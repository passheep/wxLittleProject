{"version":3,"sources":["index.js","table.js","drawTable.js","drawBorder.js","drawRow.js","calculateCellWidthIndex.js","makeConfig.js","getBorderCharacters.js","validateConfig.js","calculateMaximumColumnWidthIndex.js","calculateRowHeightIndex.js","calculateCellHeight.js","wrapCell.js","wrapString.js","wrapWord.js","mapDataUsingRowHeightIndex.js","alignTableData.js","alignString.js","padTableData.js","validateTableData.js","stringifyTableData.js","truncateTableData.js","createStream.js","makeStreamConfig.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;AELA,ADGA,AFMA,ACHA;AELA,ADGA,AFMA,ACHA;AELA,ADGA,AFMA,ACHA;AELA,ACHA,AFMA,AFMA,ACHA;AELA,ACHA,AFMA,AFMA,ACHA;AELA,ACHA,AFMA,AFMA,ACHA;AIXA,AFMA,ACHA,AFMA,AFMA,ACHA;AIXA,AFMA,ACHA,AFMA,AFMA,ACHA;AIXA,AFMA,ACHA,AFMA,AFMA,ACHA;AIXA,AFMA,ACHA,AFMA,AFMA,AMlBA,ALeA;AIXA,AFMA,ACHA,AFMA,AFMA,AMlBA,ALeA;AIXA,AFMA,ACHA,AFMA,AFMA,AMlBA,ALeA;AIXA,AFMA,ACHA,AFMA,AKfA,APqBA,AMlBA,ALeA;AIXA,AFMA,ACHA,AFMA,AKfA,APqBA,AMlBA,ALeA;AIXA,AFMA,ACHA,AFMA,AKfA,APqBA,AMlBA,ALeA;AIXA,AFMA,ACHA,AFMA,AKfA,APqBA,AMlBA,ALeA,AOrBA;AHUA,AFMA,ACHA,AFMA,AKfA,APqBA,AMlBA,ALeA,AOrBA;AHUA,AFMA,ACHA,AFMA,AKfA,APqBA,AMlBA,ALeA,AOrBA;AHUA,AIZA,ANkBA,ACHA,AFMA,AKfA,APqBA,AMlBA,ALeA,AOrBA;AHUA,AIZA,ANkBA,ACHA,AFMA,AKfA,APqBA,AMlBA,ALeA,AOrBA;AHUA,AIZA,ANkBA,ACHA,AFMA,AKfA,APqBA,AMlBA,ALeA,AOrBA;AHUA,AIZA,ACHA,APqBA,ACHA,AFMA,AKfA,APqBA,AMlBA,ALeA,AOrBA;AHUA,AIZA,ACHA,APqBA,ACHA,AFMA,AKfA,APqBA,AMlBA,ALeA,AOrBA;AHUA,AIZA,ACHA,APqBA,ACHA,AFMA,AKfA,ADGA,ALeA,AOrBA;AGRA,ANkBA,AIZA,ACHA,APqBA,ACHA,AFMA,AKfA,ADGA,ALeA,AOrBA;AGRA,ANkBA,AIZA,ACHA,APqBA,ACHA,AFMA,AKfA,ADGA,ALeA,AOrBA;AGRA,ANkBA,AIZA,ACHA,APqBA,ACHA,AFMA,AKfA,ADGA,ALeA,AOrBA;AGRA,ANkBA,AIZA,ACHA,APqBA,ACHA,AFMA,AKfA,ADGA,ALeA,AOrBA,AIZA;ADIA,ANkBA,AIZA,ACHA,APqBA,ACHA,AFMA,AKfA,ADGA,ALeA,AOrBA,AIZA;ADIA,ANkBA,AIZA,ACHA,APqBA,ADGA,AKfA,ADGA,ALeA,AOrBA,AIZA;ADIA,ANkBA,AIZA,ACHA,APqBA,ADGA,AKfA,ADGA,ALeA,AOrBA,AIZA,ACHA;AFOA,ANkBA,AIZA,ACHA,APqBA,ADGA,AKfA,ADGA,ALeA,AOrBA,AIZA,ACHA;AFOA,ANkBA,AIZA,ACHA,APqBA,ADGA,AKfA,ADGA,ALeA,AOrBA,AIZA,ACHA;AFOA,ANkBA,AIZA,ACHA,APqBA,ADGA,AKfA,ADGA,ALeA,AOrBA,AIZA,ACHA,ACHA;AHUA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,ALeA,AOrBA,AIZA,ACHA,ACHA;AHUA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,ALeA,AOrBA,AIZA,ACHA,ACHA;AHUA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,Ad0CA,AOrBA,AIZA,ACHA,ACHA;AHUA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,Ad0CA,AOrBA,AIZA,ACHA,ACHA;AHUA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,Ad0CA,AOrBA,AIZA,ACHA,ACHA;AELA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,Ad0CA,AOrBA,AIZA,ACHA,ACHA;AELA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,Ad0CA,AOrBA,AIZA,ACHA,ACHA;AELA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,Ad0CA,AOrBA,AIZA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,Ad0CA,AOrBA,AIZA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,Ad0CA,AOrBA,AIZA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,Ad0CA,AOrBA,AIZA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,AGTA,AjBmDA,AOrBA,AIZA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,AGTA,AjBmDA,AOrBA,AIZA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,AGTA,AjBmDA,AOrBA,AIZA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,AGTA,AjBmDA,AOrBA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,AGTA,AjBmDA,AOrBA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,AGTA,AjBmDA,AOrBA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,AGTA,AENA,AnByDA,AOrBA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,AGTA,AENA,AnByDA,AOrBA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,AGTA,AENA,AnByDA,AOrBA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,AFMA,ACHA,APqBA,ADGA,AKfA,ADGA,AS3BA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,ADGA,APqBA,ADGA,AKfA,ADGA,AS3BA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,ADGA,APqBA,AIZA,ADGA,AS3BA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,ADGA,AYpCA,AnByDA,AIZA,ADGA,AS3BA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,ADGA,AYpCA,AnByDA,AIZA,ADGA,AS3BA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,ADGA,AYpCA,AnByDA,AIZA,ADGA,AS3BA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,ADGA,AYpCA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ALeA,ADGA,AYpCA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ANkBA,AYpCA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ANkBA,AYpCA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ANkBA,AYpCA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ANkBA,AYpCA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ANkBA,AYpCA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ANkBA,AYpCA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,ANkBA,AYpCA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AGTA,AENA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,AMlBA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AKfA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,ACHA,ACHA;AGRA,ADGA,AMlBA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AKfA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,AENA;AGRA,ADGA,AMlBA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AKfA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,AENA;AGRA,ADGA,AMlBA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,AKfA,AnByDA,AoB5DA,AbuCA,AWjCA,APqBA,AENA;AGRA,ADGA,AMlBA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,Ad0CA,AoB5DA,AbuCA,AWjCA,APqBA,AENA;AGRA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,Ad0CA,AoB5DA,AbuCA,AWjCA,APqBA,AENA;AGRA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,Ad0CA,AoB5DA,AbuCA,AWjCA,ALeA;AGRA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,Ad0CA,AoB5DA,AbuCA,AWjCA,ALeA;AGRA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,Ad0CA,AoB5DA,AbuCA,AWjCA,ALeA;AGRA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,Ad0CA,AoB5DA,AbuCA,AWjCA,ALeA;AGRA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,ARwBA,Ad0CA,AoB5DA,AbuCA,AWjCA,ALeA;AGRA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AoB5DA,AbuCA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AoB5DA,AbuCA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AoB5DA,AbuCA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AoB5DA,AbuCA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,ADGA,AiBnDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,AgBhDA,AtBkEA,AOrBA,AWjCA;AFOA,AKfA,AnByDA,AIZA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,AnByDA,AIZA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,AnByDA,AIZA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,AnByDA,AIZA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,AnByDA,AIZA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,AnByDA,AIZA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,Af6CA,AgBhDA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA,AWjCA;AFOA,AKfA,ACHA,Af6CA;AS1BA,AKfA,ACHA,Af6CA;AS1BA,AKfA,ACHA,Af6CA;AS1BA,AKfA,ACHA,Af6CA;AS1BA,AKfA,ACHA,Af6CA;AS1BA,AKfA,ACHA,Af6CA;AczCA,ACHA,Af6CA;AczCA,ACHA,Af6CA;AczCA,ACHA,Af6CA;AczCA,ACHA,Af6CA;AczCA,ACHA,Af6CA;AczCA,ACHA,Af6CA;AczCA,ACHA,Af6CA;AczCA,ACHA,Af6CA;AczCA,ACHA,Af6CA;AczCA,ACHA,Af6CA;AczCA,ACHA,Af6CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AczCA,Ad0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"table\", {\n  enumerable: true,\n  get: function get() {\n    return _table.default;\n  }\n});\nObject.defineProperty(exports, \"createStream\", {\n  enumerable: true,\n  get: function get() {\n    return _createStream.default;\n  }\n});\nObject.defineProperty(exports, \"getBorderCharacters\", {\n  enumerable: true,\n  get: function get() {\n    return _getBorderCharacters.default;\n  }\n});\n\nvar _table = _interopRequireDefault(require(\"./table\"));\n\nvar _createStream = _interopRequireDefault(require(\"./createStream\"));\n\nvar _getBorderCharacters = _interopRequireDefault(require(\"./getBorderCharacters\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=index.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _drawTable = _interopRequireDefault(require(\"./drawTable\"));\n\nvar _calculateCellWidthIndex = _interopRequireDefault(require(\"./calculateCellWidthIndex\"));\n\nvar _makeConfig = _interopRequireDefault(require(\"./makeConfig\"));\n\nvar _calculateRowHeightIndex = _interopRequireDefault(require(\"./calculateRowHeightIndex\"));\n\nvar _mapDataUsingRowHeightIndex = _interopRequireDefault(require(\"./mapDataUsingRowHeightIndex\"));\n\nvar _alignTableData = _interopRequireDefault(require(\"./alignTableData\"));\n\nvar _padTableData = _interopRequireDefault(require(\"./padTableData\"));\n\nvar _validateTableData = _interopRequireDefault(require(\"./validateTableData\"));\n\nvar _stringifyTableData = _interopRequireDefault(require(\"./stringifyTableData\"));\n\nvar _truncateTableData = _interopRequireDefault(require(\"./truncateTableData\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef {string} table~cell\n */\n\n/**\n * @typedef {table~cell[]} table~row\n */\n\n/**\n * @typedef {Object} table~columns\n * @property {string} alignment Cell content alignment (enum: left, center, right) (default: left).\n * @property {number} width Column width (default: auto).\n * @property {number} truncate Number of characters are which the content will be truncated (default: Infinity).\n * @property {boolean} wrapWord When true the text is broken at the nearest space or one of the special characters\n * @property {number} paddingLeft Cell content padding width left (default: 1).\n * @property {number} paddingRight Cell content padding width right (default: 1).\n */\n\n/**\n * @typedef {Object} table~border\n * @property {string} topBody\n * @property {string} topJoin\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} bottomBody\n * @property {string} bottomJoin\n * @property {string} bottomLeft\n * @property {string} bottomRight\n * @property {string} bodyLeft\n * @property {string} bodyRight\n * @property {string} bodyJoin\n * @property {string} joinBody\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinJoin\n */\n\n/**\n * Used to tell whether to draw a horizontal line.\n * This callback is called for each non-content line of the table.\n * The default behavior is to always return true.\n *\n * @typedef {Function} drawHorizontalLine\n * @param {number} index\n * @param {number} size\n * @returns {boolean}\n */\n\n/**\n * @typedef {Object} table~config\n * @property {table~border} border\n * @property {table~columns[]} columns Column specific configuration.\n * @property {table~columns} columnDefault Default values for all columns. Column specific settings overwrite the default values.\n * @property {table~drawHorizontalLine} drawHorizontalLine\n * @property {table~singleLine} singleLine Horizontal lines inside the table are not drawn.\n */\n\n/**\n * Generates a text table.\n *\n * @param {table~row[]} data\n * @param {table~config} userConfig\n * @returns {string}\n */\nconst table = (data, userConfig = {}) => {\n  let rows;\n  (0, _validateTableData.default)(data);\n  rows = (0, _stringifyTableData.default)(data);\n  const config = (0, _makeConfig.default)(rows, userConfig);\n  rows = (0, _truncateTableData.default)(data, config);\n  const rowHeightIndex = (0, _calculateRowHeightIndex.default)(rows, config);\n  rows = (0, _mapDataUsingRowHeightIndex.default)(rows, rowHeightIndex, config);\n  rows = (0, _alignTableData.default)(rows, config);\n  rows = (0, _padTableData.default)(rows, config);\n  const cellWidthIndex = (0, _calculateCellWidthIndex.default)(rows[0]);\n  return (0, _drawTable.default)(rows, config.border, cellWidthIndex, rowHeightIndex, config.drawHorizontalLine, config.singleLine);\n};\n\nvar _default = table;\nexports.default = _default;\n//# sourceMappingURL=table.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _drawBorder = require(\"./drawBorder\");\n\nvar _drawRow = _interopRequireDefault(require(\"./drawRow\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {Array} rows\n * @param {Object} border\n * @param {Array} columnSizeIndex\n * @param {Array} rowSpanIndex\n * @param {Function} drawHorizontalLine\n * @param {boolean} singleLine\n * @returns {string}\n */\nconst drawTable = (rows, border, columnSizeIndex, rowSpanIndex, drawHorizontalLine, singleLine) => {\n  let output;\n  let realRowIndex;\n  let rowHeight;\n  const rowCount = rows.length;\n  realRowIndex = 0;\n  output = '';\n\n  if (drawHorizontalLine(realRowIndex, rowCount)) {\n    output += (0, _drawBorder.drawBorderTop)(columnSizeIndex, border);\n  }\n\n  rows.forEach((row, index0) => {\n    output += (0, _drawRow.default)(row, border);\n\n    if (!rowHeight) {\n      rowHeight = rowSpanIndex[realRowIndex];\n      realRowIndex++;\n    }\n\n    rowHeight--;\n\n    if (!singleLine && rowHeight === 0 && index0 !== rowCount - 1 && drawHorizontalLine(realRowIndex, rowCount)) {\n      output += (0, _drawBorder.drawBorderJoin)(columnSizeIndex, border);\n    }\n  });\n\n  if (drawHorizontalLine(realRowIndex, rowCount)) {\n    output += (0, _drawBorder.drawBorderBottom)(columnSizeIndex, border);\n  }\n\n  return output;\n};\n\nvar _default = drawTable;\nexports.default = _default;\n//# sourceMappingURL=drawTable.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawBorderTop = exports.drawBorderJoin = exports.drawBorderBottom = exports.drawBorder = void 0;\n\n/**\n * @typedef drawBorder~parts\n * @property {string} left\n * @property {string} right\n * @property {string} body\n * @property {string} join\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorder~parts} parts\n * @returns {string}\n */\nconst drawBorder = (columnSizeIndex, parts) => {\n  const columns = columnSizeIndex.map(size => {\n    return parts.body.repeat(size);\n  }).join(parts.join);\n  return parts.left + columns + parts.right + '\\n';\n};\n/**\n * @typedef drawBorderTop~parts\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} topBody\n * @property {string} topJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderTop~parts} parts\n * @returns {string}\n */\n\n\nexports.drawBorder = drawBorder;\n\nconst drawBorderTop = (columnSizeIndex, parts) => {\n  const border = drawBorder(columnSizeIndex, {\n    body: parts.topBody,\n    join: parts.topJoin,\n    left: parts.topLeft,\n    right: parts.topRight\n  });\n\n  if (border === '\\n') {\n    return '';\n  }\n\n  return border;\n};\n/**\n * @typedef drawBorderJoin~parts\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinBody\n * @property {string} joinJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderJoin~parts} parts\n * @returns {string}\n */\n\n\nexports.drawBorderTop = drawBorderTop;\n\nconst drawBorderJoin = (columnSizeIndex, parts) => {\n  return drawBorder(columnSizeIndex, {\n    body: parts.joinBody,\n    join: parts.joinJoin,\n    left: parts.joinLeft,\n    right: parts.joinRight\n  });\n};\n/**\n * @typedef drawBorderBottom~parts\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} topBody\n * @property {string} topJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderBottom~parts} parts\n * @returns {string}\n */\n\n\nexports.drawBorderJoin = drawBorderJoin;\n\nconst drawBorderBottom = (columnSizeIndex, parts) => {\n  return drawBorder(columnSizeIndex, {\n    body: parts.bottomBody,\n    join: parts.bottomJoin,\n    left: parts.bottomLeft,\n    right: parts.bottomRight\n  });\n};\n\nexports.drawBorderBottom = drawBorderBottom;\n//# sourceMappingURL=drawBorder.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * @typedef {Object} drawRow~border\n * @property {string} bodyLeft\n * @property {string} bodyRight\n * @property {string} bodyJoin\n */\n\n/**\n * @param {number[]} columns\n * @param {drawRow~border} border\n * @returns {string}\n */\nconst drawRow = (columns, border) => {\n  return border.bodyLeft + columns.join(border.bodyJoin) + border.bodyRight + '\\n';\n};\n\nvar _default = drawRow;\nexports.default = _default;\n//# sourceMappingURL=drawRow.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _stringWidth = _interopRequireDefault(require(\"string-width\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Calculates width of each cell contents.\n *\n * @param {string[]} cells\n * @returns {number[]}\n */\nconst calculateCellWidthIndex = cells => {\n  return cells.map(value => {\n    return Math.max(...value.split('\\n').map(line => {\n      return (0, _stringWidth.default)(line);\n    }));\n  });\n};\n\nvar _default = calculateCellWidthIndex;\nexports.default = _default;\n//# sourceMappingURL=calculateCellWidthIndex.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _cloneDeep2 = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\nvar _isUndefined2 = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar _times2 = _interopRequireDefault(require(\"lodash/times\"));\n\nvar _getBorderCharacters = _interopRequireDefault(require(\"./getBorderCharacters\"));\n\nvar _validateConfig = _interopRequireDefault(require(\"./validateConfig\"));\n\nvar _calculateMaximumColumnWidthIndex = _interopRequireDefault(require(\"./calculateMaximumColumnWidthIndex\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Merges user provided border characters with the default border (\"honeywell\") characters.\n *\n * @param {Object} border\n * @returns {Object}\n */\nconst makeBorder = (border = {}) => {\n  return Object.assign({}, (0, _getBorderCharacters.default)('honeywell'), border);\n};\n/**\n * Creates a configuration for every column using default\n * values for the missing configuration properties.\n *\n * @param {Array[]} rows\n * @param {Object} columns\n * @param {Object} columnDefault\n * @returns {Object}\n */\n\n\nconst makeColumns = (rows, columns = {}, columnDefault = {}) => {\n  const maximumColumnWidthIndex = (0, _calculateMaximumColumnWidthIndex.default)(rows);\n  (0, _times2.default)(rows[0].length, index => {\n    if ((0, _isUndefined2.default)(columns[index])) {\n      columns[index] = {};\n    }\n\n    columns[index] = Object.assign({\n      alignment: 'left',\n      paddingLeft: 1,\n      paddingRight: 1,\n      truncate: Infinity,\n      width: maximumColumnWidthIndex[index],\n      wrapWord: false\n    }, columnDefault, columns[index]);\n  });\n  return columns;\n};\n/**\n * Makes a new configuration object out of the userConfig object\n * using default values for the missing configuration properties.\n *\n * @param {Array[]} rows\n * @param {Object} userConfig\n * @returns {Object}\n */\n\n\nconst makeConfig = (rows, userConfig = {}) => {\n  (0, _validateConfig.default)('config.json', userConfig);\n  const config = (0, _cloneDeep2.default)(userConfig);\n  config.border = makeBorder(config.border);\n  config.columns = makeColumns(rows, config.columns, config.columnDefault);\n\n  if (!config.drawHorizontalLine) {\n    /**\n         * @returns {boolean}\n         */\n    config.drawHorizontalLine = () => {\n      return true;\n    };\n  }\n\n  if (config.singleLine === undefined) {\n    config.singleLine = false;\n  }\n\n  return config;\n};\n\nvar _default = makeConfig;\nexports.default = _default;\n//# sourceMappingURL=makeConfig.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/* eslint-disable sort-keys */\n\n/**\n * @typedef border\n * @property {string} topBody\n * @property {string} topJoin\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} bottomBody\n * @property {string} bottomJoin\n * @property {string} bottomLeft\n * @property {string} bottomRight\n * @property {string} bodyLeft\n * @property {string} bodyRight\n * @property {string} bodyJoin\n * @property {string} joinBody\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinJoin\n */\n\n/**\n * @param {string} name\n * @returns {border}\n */\nconst getBorderCharacters = name => {\n  if (name === 'honeywell') {\n    return {\n      topBody: '═',\n      topJoin: '╤',\n      topLeft: '╔',\n      topRight: '╗',\n      bottomBody: '═',\n      bottomJoin: '╧',\n      bottomLeft: '╚',\n      bottomRight: '╝',\n      bodyLeft: '║',\n      bodyRight: '║',\n      bodyJoin: '│',\n      joinBody: '─',\n      joinLeft: '╟',\n      joinRight: '╢',\n      joinJoin: '┼'\n    };\n  }\n\n  if (name === 'norc') {\n    return {\n      topBody: '─',\n      topJoin: '┬',\n      topLeft: '┌',\n      topRight: '┐',\n      bottomBody: '─',\n      bottomJoin: '┴',\n      bottomLeft: '└',\n      bottomRight: '┘',\n      bodyLeft: '│',\n      bodyRight: '│',\n      bodyJoin: '│',\n      joinBody: '─',\n      joinLeft: '├',\n      joinRight: '┤',\n      joinJoin: '┼'\n    };\n  }\n\n  if (name === 'ramac') {\n    return {\n      topBody: '-',\n      topJoin: '+',\n      topLeft: '+',\n      topRight: '+',\n      bottomBody: '-',\n      bottomJoin: '+',\n      bottomLeft: '+',\n      bottomRight: '+',\n      bodyLeft: '|',\n      bodyRight: '|',\n      bodyJoin: '|',\n      joinBody: '-',\n      joinLeft: '|',\n      joinRight: '|',\n      joinJoin: '|'\n    };\n  }\n\n  if (name === 'void') {\n    return {\n      topBody: '',\n      topJoin: '',\n      topLeft: '',\n      topRight: '',\n      bottomBody: '',\n      bottomJoin: '',\n      bottomLeft: '',\n      bottomRight: '',\n      bodyLeft: '',\n      bodyRight: '',\n      bodyJoin: '',\n      joinBody: '',\n      joinLeft: '',\n      joinRight: '',\n      joinJoin: ''\n    };\n  }\n\n  throw new Error('Unknown border template \"' + name + '\".');\n};\n\nvar _default = getBorderCharacters;\nexports.default = _default;\n//# sourceMappingURL=getBorderCharacters.js.map","\nvar equal = require('ajv/lib/compile/equal');\nvar validate = (function() {\n  var pattern0 = new RegExp('^[0-9]+$');\n  var refVal = [];\n  var refVal1 = (function() {\n    var pattern0 = new RegExp('^[0-9]+$');\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      \n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n      if ((data && typeof data === \"object\" && !Array.isArray(data))) {\n        var errs__0 = errors;\n        var valid1 = true;\n        for (var key0 in data) {\n          var isAdditional0 = !(false || validate.schema.properties.hasOwnProperty(key0));\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: 'additionalProperties',\n              dataPath: (dataPath || '') + \"\",\n              schemaPath: '#/additionalProperties',\n              params: {\n                additionalProperty: '' + key0 + ''\n              },\n              message: 'should NOT have additional properties'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n        }\n        if (data.topBody !== undefined) {\n          var errs_1 = errors;\n          if (!refVal2(data.topBody, (dataPath || '') + '.topBody', data, 'topBody', rootData)) {\n            if (vErrors === null) vErrors = refVal2.errors;\n            else vErrors = vErrors.concat(refVal2.errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.topJoin !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.topJoin, (dataPath || '') + '.topJoin', data, 'topJoin', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.topLeft !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.topLeft, (dataPath || '') + '.topLeft', data, 'topLeft', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.topRight !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.topRight, (dataPath || '') + '.topRight', data, 'topRight', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bottomBody !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bottomBody, (dataPath || '') + '.bottomBody', data, 'bottomBody', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bottomJoin !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bottomJoin, (dataPath || '') + '.bottomJoin', data, 'bottomJoin', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bottomLeft !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bottomLeft, (dataPath || '') + '.bottomLeft', data, 'bottomLeft', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bottomRight !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bottomRight, (dataPath || '') + '.bottomRight', data, 'bottomRight', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bodyLeft !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bodyLeft, (dataPath || '') + '.bodyLeft', data, 'bodyLeft', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bodyRight !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bodyRight, (dataPath || '') + '.bodyRight', data, 'bodyRight', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bodyJoin !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bodyJoin, (dataPath || '') + '.bodyJoin', data, 'bodyJoin', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.joinBody !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.joinBody, (dataPath || '') + '.joinBody', data, 'joinBody', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.joinLeft !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.joinLeft, (dataPath || '') + '.joinLeft', data, 'joinLeft', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.joinRight !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.joinRight, (dataPath || '') + '.joinRight', data, 'joinRight', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.joinJoin !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.joinJoin, (dataPath || '') + '.joinJoin', data, 'joinJoin', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: 'type',\n          dataPath: (dataPath || '') + \"\",\n          schemaPath: '#/type',\n          params: {\n            type: 'object'\n          },\n          message: 'should be object'\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal1.schema = {\n    \"type\": \"object\",\n    \"properties\": {\n      \"topBody\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"topJoin\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"topLeft\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"topRight\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bottomBody\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bottomJoin\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bottomLeft\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bottomRight\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bodyLeft\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bodyRight\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bodyJoin\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"joinBody\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"joinLeft\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"joinRight\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"joinJoin\": {\n        \"$ref\": \"#/definitions/border\"\n      }\n    },\n    \"additionalProperties\": false\n  };\n  refVal1.errors = null;\n  refVal[1] = refVal1;\n  var refVal2 = (function() {\n    var pattern0 = new RegExp('^[0-9]+$');\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      \n      var vErrors = null;\n      var errors = 0;\n      if (typeof data !== \"string\") {\n        var err = {\n          keyword: 'type',\n          dataPath: (dataPath || '') + \"\",\n          schemaPath: '#/type',\n          params: {\n            type: 'string'\n          },\n          message: 'should be string'\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal2.schema = {\n    \"type\": \"string\"\n  };\n  refVal2.errors = null;\n  refVal[2] = refVal2;\n  var refVal3 = (function() {\n    var pattern0 = new RegExp('^[0-9]+$');\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      \n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n      if ((data && typeof data === \"object\" && !Array.isArray(data))) {\n        var errs__0 = errors;\n        var valid1 = true;\n        for (var key0 in data) {\n          var isAdditional0 = !(false || pattern0.test(key0));\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: 'additionalProperties',\n              dataPath: (dataPath || '') + \"\",\n              schemaPath: '#/additionalProperties',\n              params: {\n                additionalProperty: '' + key0 + ''\n              },\n              message: 'should NOT have additional properties'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n        }\n        for (var key0 in data) {\n          if (pattern0.test(key0)) {\n            var errs_1 = errors;\n            if (!refVal4(data[key0], (dataPath || '') + '[\\'' + key0 + '\\']', data, key0, rootData)) {\n              if (vErrors === null) vErrors = refVal4.errors;\n              else vErrors = vErrors.concat(refVal4.errors);\n              errors = vErrors.length;\n            }\n            var valid1 = errors === errs_1;\n          }\n        }\n      } else {\n        var err = {\n          keyword: 'type',\n          dataPath: (dataPath || '') + \"\",\n          schemaPath: '#/type',\n          params: {\n            type: 'object'\n          },\n          message: 'should be object'\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal3.schema = {\n    \"type\": \"object\",\n    \"patternProperties\": {\n      \"^[0-9]+$\": {\n        \"$ref\": \"#/definitions/column\"\n      }\n    },\n    \"additionalProperties\": false\n  };\n  refVal3.errors = null;\n  refVal[3] = refVal3;\n  var refVal4 = (function() {\n    var pattern0 = new RegExp('^[0-9]+$');\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      \n      var vErrors = null;\n      var errors = 0;\n      if ((data && typeof data === \"object\" && !Array.isArray(data))) {\n        var errs__0 = errors;\n        var valid1 = true;\n        for (var key0 in data) {\n          var isAdditional0 = !(false || key0 == 'alignment' || key0 == 'width' || key0 == 'wrapWord' || key0 == 'truncate' || key0 == 'paddingLeft' || key0 == 'paddingRight');\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: 'additionalProperties',\n              dataPath: (dataPath || '') + \"\",\n              schemaPath: '#/additionalProperties',\n              params: {\n                additionalProperty: '' + key0 + ''\n              },\n              message: 'should NOT have additional properties'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n        }\n        var data1 = data.alignment;\n        if (data1 !== undefined) {\n          var errs_1 = errors;\n          if (typeof data1 !== \"string\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.alignment',\n              schemaPath: '#/properties/alignment/type',\n              params: {\n                type: 'string'\n              },\n              message: 'should be string'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var schema1 = validate.schema.properties.alignment.enum;\n          var valid1;\n          valid1 = false;\n          for (var i1 = 0; i1 < schema1.length; i1++)\n            if (equal(data1, schema1[i1])) {\n              valid1 = true;\n              break;\n            } if (!valid1) {\n            var err = {\n              keyword: 'enum',\n              dataPath: (dataPath || '') + '.alignment',\n              schemaPath: '#/properties/alignment/enum',\n              params: {\n                allowedValues: schema1\n              },\n              message: 'should be equal to one of the allowed values'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.width !== undefined) {\n          var errs_1 = errors;\n          if (typeof data.width !== \"number\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.width',\n              schemaPath: '#/properties/width/type',\n              params: {\n                type: 'number'\n              },\n              message: 'should be number'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.wrapWord !== undefined) {\n          var errs_1 = errors;\n          if (typeof data.wrapWord !== \"boolean\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.wrapWord',\n              schemaPath: '#/properties/wrapWord/type',\n              params: {\n                type: 'boolean'\n              },\n              message: 'should be boolean'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.truncate !== undefined) {\n          var errs_1 = errors;\n          if (typeof data.truncate !== \"number\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.truncate',\n              schemaPath: '#/properties/truncate/type',\n              params: {\n                type: 'number'\n              },\n              message: 'should be number'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.paddingLeft !== undefined) {\n          var errs_1 = errors;\n          if (typeof data.paddingLeft !== \"number\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.paddingLeft',\n              schemaPath: '#/properties/paddingLeft/type',\n              params: {\n                type: 'number'\n              },\n              message: 'should be number'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.paddingRight !== undefined) {\n          var errs_1 = errors;\n          if (typeof data.paddingRight !== \"number\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.paddingRight',\n              schemaPath: '#/properties/paddingRight/type',\n              params: {\n                type: 'number'\n              },\n              message: 'should be number'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: 'type',\n          dataPath: (dataPath || '') + \"\",\n          schemaPath: '#/type',\n          params: {\n            type: 'object'\n          },\n          message: 'should be object'\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal4.schema = {\n    \"type\": \"object\",\n    \"properties\": {\n      \"alignment\": {\n        \"type\": \"string\",\n        \"enum\": [\"left\", \"right\", \"center\"]\n      },\n      \"width\": {\n        \"type\": \"number\"\n      },\n      \"wrapWord\": {\n        \"type\": \"boolean\"\n      },\n      \"truncate\": {\n        \"type\": \"number\"\n      },\n      \"paddingLeft\": {\n        \"type\": \"number\"\n      },\n      \"paddingRight\": {\n        \"type\": \"number\"\n      }\n    },\n    \"additionalProperties\": false\n  };\n  refVal4.errors = null;\n  refVal[4] = refVal4;\n  return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n     /*# sourceURL=config.json */\n    var vErrors = null;\n    var errors = 0;\n    if (rootData === undefined) rootData = data;\n    if ((data && typeof data === \"object\" && !Array.isArray(data))) {\n      var errs__0 = errors;\n      var valid1 = true;\n      for (var key0 in data) {\n        var isAdditional0 = !(false || key0 == 'border' || key0 == 'columns' || key0 == 'columnDefault' || key0 == 'drawHorizontalLine');\n        if (isAdditional0) {\n          valid1 = false;\n          var err = {\n            keyword: 'additionalProperties',\n            dataPath: (dataPath || '') + \"\",\n            schemaPath: '#/additionalProperties',\n            params: {\n              additionalProperty: '' + key0 + ''\n            },\n            message: 'should NOT have additional properties'\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        }\n      }\n      if (data.border !== undefined) {\n        var errs_1 = errors;\n        if (!refVal1(data.border, (dataPath || '') + '.border', data, 'border', rootData)) {\n          if (vErrors === null) vErrors = refVal1.errors;\n          else vErrors = vErrors.concat(refVal1.errors);\n          errors = vErrors.length;\n        }\n        var valid1 = errors === errs_1;\n      }\n      if (data.columns !== undefined) {\n        var errs_1 = errors;\n        if (!refVal3(data.columns, (dataPath || '') + '.columns', data, 'columns', rootData)) {\n          if (vErrors === null) vErrors = refVal3.errors;\n          else vErrors = vErrors.concat(refVal3.errors);\n          errors = vErrors.length;\n        }\n        var valid1 = errors === errs_1;\n      }\n      if (data.columnDefault !== undefined) {\n        var errs_1 = errors;\n        if (!refVal[4](data.columnDefault, (dataPath || '') + '.columnDefault', data, 'columnDefault', rootData)) {\n          if (vErrors === null) vErrors = refVal[4].errors;\n          else vErrors = vErrors.concat(refVal[4].errors);\n          errors = vErrors.length;\n        }\n        var valid1 = errors === errs_1;\n      }\n      if (data.drawHorizontalLine !== undefined) {\n        var errs_1 = errors;\n        var errs__1 = errors;\n        var valid1;\n        valid1 = typeof data.drawHorizontalLine == \"function\";\n        if (!valid1) {\n          if (errs__1 == errors) {\n            var err = {\n              keyword: 'typeof',\n              dataPath: (dataPath || '') + '.drawHorizontalLine',\n              schemaPath: '#/properties/drawHorizontalLine/typeof',\n              params: {\n                keyword: 'typeof'\n              },\n              message: 'should pass \"typeof\" keyword validation'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            for (var i1 = errs__1; i1 < errors; i1++) {\n              var ruleErr1 = vErrors[i1];\n              if (ruleErr1.dataPath === undefined) ruleErr1.dataPath = (dataPath || '') + '.drawHorizontalLine';\n              if (ruleErr1.schemaPath === undefined) {\n                ruleErr1.schemaPath = \"#/properties/drawHorizontalLine/typeof\";\n              }\n            }\n          }\n        }\n        var valid1 = errors === errs_1;\n      }\n    } else {\n      var err = {\n        keyword: 'type',\n        dataPath: (dataPath || '') + \"\",\n        schemaPath: '#/type',\n        params: {\n          type: 'object'\n        },\n        message: 'should be object'\n      };\n      if (vErrors === null) vErrors = [err];\n      else vErrors.push(err);\n      errors++;\n    }\n    validate.errors = vErrors;\n    return errors === 0;\n  };\n})();\nvalidate.schema = {\n  \"$id\": \"config.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"border\": {\n      \"$ref\": \"#/definitions/borders\"\n    },\n    \"columns\": {\n      \"$ref\": \"#/definitions/columns\"\n    },\n    \"columnDefault\": {\n      \"$ref\": \"#/definitions/column\"\n    },\n    \"drawHorizontalLine\": {\n      \"typeof\": \"function\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"definitions\": {\n    \"columns\": {\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"^[0-9]+$\": {\n          \"$ref\": \"#/definitions/column\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"column\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"alignment\": {\n          \"type\": \"string\",\n          \"enum\": [\"left\", \"right\", \"center\"]\n        },\n        \"width\": {\n          \"type\": \"number\"\n        },\n        \"wrapWord\": {\n          \"type\": \"boolean\"\n        },\n        \"truncate\": {\n          \"type\": \"number\"\n        },\n        \"paddingLeft\": {\n          \"type\": \"number\"\n        },\n        \"paddingRight\": {\n          \"type\": \"number\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"borders\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"topBody\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"topJoin\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"topLeft\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"topRight\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomBody\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomJoin\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomLeft\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomRight\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyLeft\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyRight\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyJoin\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"joinBody\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"joinLeft\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"joinRight\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"joinJoin\": {\n          \"$ref\": \"#/definitions/border\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"border\": {\n      \"type\": \"string\"\n    }\n  }\n};\nvalidate.errors = null;\nmodule.exports = validate;","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _calculateCellWidthIndex = _interopRequireDefault(require(\"./calculateCellWidthIndex\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces an array of values that describe the largest value length (width) in every column.\n *\n * @param {Array[]} rows\n * @returns {number[]}\n */\nconst calculateMaximumColumnWidthIndex = rows => {\n  if (!rows[0]) {\n    throw new Error('Dataset must have at least one row.');\n  }\n\n  const columns = new Array(rows[0].length).fill(0);\n  rows.forEach(row => {\n    const columnWidthIndex = (0, _calculateCellWidthIndex.default)(row);\n    columnWidthIndex.forEach((valueWidth, index0) => {\n      if (columns[index0] < valueWidth) {\n        columns[index0] = valueWidth;\n      }\n    });\n  });\n  return columns;\n};\n\nvar _default = calculateMaximumColumnWidthIndex;\nexports.default = _default;\n//# sourceMappingURL=calculateMaximumColumnWidthIndex.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _max2 = _interopRequireDefault(require(\"lodash/max\"));\n\nvar _isBoolean2 = _interopRequireDefault(require(\"lodash/isBoolean\"));\n\nvar _isNumber2 = _interopRequireDefault(require(\"lodash/isNumber\"));\n\nvar _calculateCellHeight = _interopRequireDefault(require(\"./calculateCellHeight\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Calculates the vertical row span index.\n *\n * @param {Array[]} rows\n * @param {Object} config\n * @returns {number[]}\n */\nconst calculateRowHeightIndex = (rows, config) => {\n  const tableWidth = rows[0].length;\n  const rowSpanIndex = [];\n  rows.forEach(cells => {\n    const cellHeightIndex = new Array(tableWidth).fill(1);\n    cells.forEach((value, index1) => {\n      if (!(0, _isNumber2.default)(config.columns[index1].width)) {\n        throw new TypeError('column[index].width must be a number.');\n      }\n\n      if (!(0, _isBoolean2.default)(config.columns[index1].wrapWord)) {\n        throw new TypeError('column[index].wrapWord must be a boolean.');\n      }\n\n      cellHeightIndex[index1] = (0, _calculateCellHeight.default)(value, config.columns[index1].width, config.columns[index1].wrapWord);\n    });\n    rowSpanIndex.push((0, _max2.default)(cellHeightIndex));\n  });\n  return rowSpanIndex;\n};\n\nvar _default = calculateRowHeightIndex;\nexports.default = _default;\n//# sourceMappingURL=calculateRowHeightIndex.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isString2 = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _wrapCell = _interopRequireDefault(require(\"./wrapCell\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {string} value\n * @param {number} columnWidth\n * @param {boolean} useWrapWord\n * @returns {number}\n */\nconst calculateCellHeight = (value, columnWidth, useWrapWord = false) => {\n  if (!(0, _isString2.default)(value)) {\n    throw new TypeError('Value must be a string.');\n  }\n\n  if (!Number.isInteger(columnWidth)) {\n    throw new TypeError('Column width must be an integer.');\n  }\n\n  if (columnWidth < 1) {\n    throw new Error('Column width must be greater than 0.');\n  }\n\n  return (0, _wrapCell.default)(value, columnWidth, useWrapWord).length;\n};\n\nvar _default = calculateCellHeight;\nexports.default = _default;\n//# sourceMappingURL=calculateCellHeight.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _wrapString = _interopRequireDefault(require(\"./wrapString\"));\n\nvar _wrapWord = _interopRequireDefault(require(\"./wrapWord\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Wrap a single cell value into a list of lines\n *\n * Always wraps on newlines, for the remainder uses either word or string wrapping\n * depending on user configuration.\n *\n * @param {string} cellValue\n * @param {number} columnWidth\n * @param {boolean} useWrapWord\n * @returns {Array}\n */\nconst wrapCell = (cellValue, columnWidth, useWrapWord) => {\n  // First split on literal newlines\n  const cellLines = cellValue.split('\\n'); // Then iterate over the list and word-wrap every remaining line if necessary.\n\n  for (let lineNr = 0; lineNr < cellLines.length;) {\n    let lineChunks;\n\n    if (useWrapWord) {\n      lineChunks = (0, _wrapWord.default)(cellLines[lineNr], columnWidth);\n    } else {\n      lineChunks = (0, _wrapString.default)(cellLines[lineNr], columnWidth);\n    } // Replace our original array element with whatever the wrapping returned\n\n\n    cellLines.splice(lineNr, 1, ...lineChunks);\n    lineNr += lineChunks.length;\n  }\n\n  return cellLines;\n};\n\nvar _default = wrapCell;\nexports.default = _default;\n//# sourceMappingURL=wrapCell.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sliceAnsi = _interopRequireDefault(require(\"slice-ansi\"));\n\nvar _stringWidth = _interopRequireDefault(require(\"string-width\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of strings split into groups the length of size.\n * This function works with strings that contain ASCII characters.\n *\n * wrapText is different from would-be \"chunk\" implementation\n * in that whitespace characters that occur on a chunk size limit are trimmed.\n *\n * @param {string} subject\n * @param {number} size\n * @returns {Array}\n */\nconst wrapString = (subject, size) => {\n  let subjectSlice;\n  subjectSlice = subject;\n  const chunks = [];\n\n  do {\n    chunks.push((0, _sliceAnsi.default)(subjectSlice, 0, size));\n    subjectSlice = (0, _sliceAnsi.default)(subjectSlice, size).trim();\n  } while ((0, _stringWidth.default)(subjectSlice));\n\n  return chunks;\n};\n\nvar _default = wrapString;\nexports.default = _default;\n//# sourceMappingURL=wrapString.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sliceAnsi = _interopRequireDefault(require(\"slice-ansi\"));\n\nvar _stringWidth = _interopRequireDefault(require(\"string-width\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {string} input\n * @param {number} size\n * @returns {Array}\n */\nconst wrapWord = (input, size) => {\n  let subject;\n  subject = input;\n  const chunks = []; // https://regex101.com/r/gY5kZ1/1\n\n  const re = new RegExp('(^.{1,' + size + '}(\\\\s+|$))|(^.{1,' + (size - 1) + '}(\\\\\\\\|/|_|\\\\.|,|;|-))');\n\n  do {\n    let chunk;\n    chunk = subject.match(re);\n\n    if (chunk) {\n      chunk = chunk[0];\n      subject = (0, _sliceAnsi.default)(subject, (0, _stringWidth.default)(chunk));\n      chunk = chunk.trim();\n    } else {\n      chunk = (0, _sliceAnsi.default)(subject, 0, size);\n      subject = (0, _sliceAnsi.default)(subject, size);\n    }\n\n    chunks.push(chunk);\n  } while ((0, _stringWidth.default)(subject));\n\n  return chunks;\n};\n\nvar _default = wrapWord;\nexports.default = _default;\n//# sourceMappingURL=wrapWord.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _flatten2 = _interopRequireDefault(require(\"lodash/flatten\"));\n\nvar _times2 = _interopRequireDefault(require(\"lodash/times\"));\n\nvar _wrapCell = _interopRequireDefault(require(\"./wrapCell\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {Array} unmappedRows\n * @param {number[]} rowHeightIndex\n * @param {Object} config\n * @returns {Array}\n */\nconst mapDataUsingRowHeightIndex = (unmappedRows, rowHeightIndex, config) => {\n  const tableWidth = unmappedRows[0].length;\n  const mappedRows = unmappedRows.map((cells, index0) => {\n    const rowHeight = (0, _times2.default)(rowHeightIndex[index0], () => {\n      return new Array(tableWidth).fill('');\n    }); // rowHeight\n    //     [{row index within rowSaw; index2}]\n    //     [{cell index within a virtual row; index1}]\n\n    cells.forEach((value, index1) => {\n      const cellLines = (0, _wrapCell.default)(value, config.columns[index1].width, config.columns[index1].wrapWord);\n      cellLines.forEach((cellLine, index2) => {\n        rowHeight[index2][index1] = cellLine;\n      });\n    });\n    return rowHeight;\n  });\n  return (0, _flatten2.default)(mappedRows);\n};\n\nvar _default = mapDataUsingRowHeightIndex;\nexports.default = _default;\n//# sourceMappingURL=mapDataUsingRowHeightIndex.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _stringWidth = _interopRequireDefault(require(\"string-width\"));\n\nvar _alignString = _interopRequireDefault(require(\"./alignString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {table~row[]} rows\n * @param {Object} config\n * @returns {table~row[]}\n */\nconst alignTableData = (rows, config) => {\n  return rows.map(cells => {\n    return cells.map((value, index1) => {\n      const column = config.columns[index1];\n\n      if ((0, _stringWidth.default)(value) === column.width) {\n        return value;\n      } else {\n        return (0, _alignString.default)(value, column.width, column.alignment);\n      }\n    });\n  });\n};\n\nvar _default = alignTableData;\nexports.default = _default;\n//# sourceMappingURL=alignTableData.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isNumber2 = _interopRequireDefault(require(\"lodash/isNumber\"));\n\nvar _isString2 = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _stringWidth = _interopRequireDefault(require(\"string-width\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst alignments = ['left', 'right', 'center'];\n/**\n * @param {string} subject\n * @param {number} width\n * @returns {string}\n */\n\nconst alignLeft = (subject, width) => {\n  return subject + ' '.repeat(width);\n};\n/**\n * @param {string} subject\n * @param {number} width\n * @returns {string}\n */\n\n\nconst alignRight = (subject, width) => {\n  return ' '.repeat(width) + subject;\n};\n/**\n * @param {string} subject\n * @param {number} width\n * @returns {string}\n */\n\n\nconst alignCenter = (subject, width) => {\n  let halfWidth;\n  halfWidth = width / 2;\n\n  if (halfWidth % 2 === 0) {\n    return ' '.repeat(halfWidth) + subject + ' '.repeat(halfWidth);\n  } else {\n    halfWidth = Math.floor(halfWidth);\n    return ' '.repeat(halfWidth) + subject + ' '.repeat(halfWidth + 1);\n  }\n};\n/**\n * Pads a string to the left and/or right to position the subject\n * text in a desired alignment within a container.\n *\n * @param {string} subject\n * @param {number} containerWidth\n * @param {string} alignment One of the valid options (left, right, center).\n * @returns {string}\n */\n\n\nconst alignString = (subject, containerWidth, alignment) => {\n  if (!(0, _isString2.default)(subject)) {\n    throw new TypeError('Subject parameter value must be a string.');\n  }\n\n  if (!(0, _isNumber2.default)(containerWidth)) {\n    throw new TypeError('Container width parameter value must be a number.');\n  }\n\n  const subjectWidth = (0, _stringWidth.default)(subject);\n\n  if (subjectWidth > containerWidth) {\n    // console.log('subjectWidth', subjectWidth, 'containerWidth', containerWidth, 'subject', subject);\n    throw new Error('Subject parameter value width cannot be greater than the container width.');\n  }\n\n  if (!(0, _isString2.default)(alignment)) {\n    throw new TypeError('Alignment parameter value must be a string.');\n  }\n\n  if (!alignments.includes(alignment)) {\n    throw new Error('Alignment parameter value must be a known alignment parameter value (left, right, center).');\n  }\n\n  if (subjectWidth === 0) {\n    return ' '.repeat(containerWidth);\n  }\n\n  const availableWidth = containerWidth - subjectWidth;\n\n  if (alignment === 'left') {\n    return alignLeft(subject, availableWidth);\n  }\n\n  if (alignment === 'right') {\n    return alignRight(subject, availableWidth);\n  }\n\n  return alignCenter(subject, availableWidth);\n};\n\nvar _default = alignString;\nexports.default = _default;\n//# sourceMappingURL=alignString.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * @param {table~row[]} rows\n * @param {Object} config\n * @returns {table~row[]}\n */\nconst padTableData = (rows, config) => {\n  return rows.map(cells => {\n    return cells.map((value, index1) => {\n      const column = config.columns[index1];\n      return ' '.repeat(column.paddingLeft) + value + ' '.repeat(column.paddingRight);\n    });\n  });\n};\n\nvar _default = padTableData;\nexports.default = _default;\n//# sourceMappingURL=padTableData.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * @typedef {string} cell\n */\n\n/**\n * @typedef {cell[]} validateData~column\n */\n\n/**\n * @param {column[]} rows\n * @returns {undefined}\n */\nconst validateTableData = rows => {\n  if (!Array.isArray(rows)) {\n    throw new TypeError('Table data must be an array.');\n  }\n\n  if (rows.length === 0) {\n    throw new Error('Table must define at least one row.');\n  }\n\n  if (rows[0].length === 0) {\n    throw new Error('Table must define at least one column.');\n  }\n\n  const columnNumber = rows[0].length;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      const cells = _step.value;\n\n      if (!Array.isArray(cells)) {\n        throw new TypeError('Table row data must be an array.');\n      }\n\n      if (cells.length !== columnNumber) {\n        throw new Error('Table must have a consistent number of cells.');\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = cells[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          const cell = _step2.value;\n\n          // eslint-disable-next-line no-control-regex\n          if (/[\\u0001-\\u0006\\u0008-\\u0009\\u000B-\\u001A]/.test(cell)) {\n            throw new Error('Table data must not contain control characters.');\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n\nvar _default = validateTableData;\nexports.default = _default;\n//# sourceMappingURL=validateTableData.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Casts all cell values to a string.\n *\n * @param {table~row[]} rows\n * @returns {table~row[]}\n */\nconst stringifyTableData = rows => {\n  return rows.map(cells => {\n    return cells.map(String);\n  });\n};\n\nvar _default = stringifyTableData;\nexports.default = _default;\n//# sourceMappingURL=stringifyTableData.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _truncate2 = _interopRequireDefault(require(\"lodash/truncate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @todo Make it work with ASCII content.\n * @param {table~row[]} rows\n * @param {Object} config\n * @returns {table~row[]}\n */\nconst truncateTableData = (rows, config) => {\n  return rows.map(cells => {\n    return cells.map((content, index) => {\n      return (0, _truncate2.default)(content, {\n        length: config.columns[index].truncate\n      });\n    });\n  });\n};\n\nvar _default = truncateTableData;\nexports.default = _default;\n//# sourceMappingURL=truncateTableData.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mapValues2 = _interopRequireDefault(require(\"lodash/mapValues\"));\n\nvar _values2 = _interopRequireDefault(require(\"lodash/values\"));\n\nvar _trimEnd2 = _interopRequireDefault(require(\"lodash/trimEnd\"));\n\nvar _makeStreamConfig = _interopRequireDefault(require(\"./makeStreamConfig\"));\n\nvar _drawRow = _interopRequireDefault(require(\"./drawRow\"));\n\nvar _drawBorder = require(\"./drawBorder\");\n\nvar _stringifyTableData = _interopRequireDefault(require(\"./stringifyTableData\"));\n\nvar _truncateTableData = _interopRequireDefault(require(\"./truncateTableData\"));\n\nvar _mapDataUsingRowHeightIndex = _interopRequireDefault(require(\"./mapDataUsingRowHeightIndex\"));\n\nvar _alignTableData = _interopRequireDefault(require(\"./alignTableData\"));\n\nvar _padTableData = _interopRequireDefault(require(\"./padTableData\"));\n\nvar _calculateRowHeightIndex = _interopRequireDefault(require(\"./calculateRowHeightIndex\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {Array} data\n * @param {Object} config\n * @returns {Array}\n */\nconst prepareData = (data, config) => {\n  let rows;\n  rows = (0, _stringifyTableData.default)(data);\n  rows = (0, _truncateTableData.default)(data, config);\n  const rowHeightIndex = (0, _calculateRowHeightIndex.default)(rows, config);\n  rows = (0, _mapDataUsingRowHeightIndex.default)(rows, rowHeightIndex, config);\n  rows = (0, _alignTableData.default)(rows, config);\n  rows = (0, _padTableData.default)(rows, config);\n  return rows;\n};\n/**\n * @param {string[]} row\n * @param {number[]} columnWidthIndex\n * @param {Object} config\n * @returns {undefined}\n */\n\n\nconst create = (row, columnWidthIndex, config) => {\n  const rows = prepareData([row], config);\n  const body = rows.map(literalRow => {\n    return (0, _drawRow.default)(literalRow, config.border);\n  }).join('');\n  let output;\n  output = '';\n  output += (0, _drawBorder.drawBorderTop)(columnWidthIndex, config.border);\n  output += body;\n  output += (0, _drawBorder.drawBorderBottom)(columnWidthIndex, config.border);\n  output = (0, _trimEnd2.default)(output);\n  process.stdout.write(output);\n};\n/**\n * @param {string[]} row\n * @param {number[]} columnWidthIndex\n * @param {Object} config\n * @returns {undefined}\n */\n\n\nconst append = (row, columnWidthIndex, config) => {\n  const rows = prepareData([row], config);\n  const body = rows.map(literalRow => {\n    return (0, _drawRow.default)(literalRow, config.border);\n  }).join('');\n  let output = '';\n  const bottom = (0, _drawBorder.drawBorderBottom)(columnWidthIndex, config.border);\n\n  if (bottom !== '\\n') {\n    output = '\\r\\u001B[K';\n  }\n\n  output += (0, _drawBorder.drawBorderJoin)(columnWidthIndex, config.border);\n  output += body;\n  output += bottom;\n  output = (0, _trimEnd2.default)(output);\n  process.stdout.write(output);\n};\n/**\n * @param {Object} userConfig\n * @returns {Object}\n */\n\n\nconst createStream = (userConfig = {}) => {\n  const config = (0, _makeStreamConfig.default)(userConfig); // @todo Use 'Object.values' when Node.js v6 support is dropped.\n\n  const columnWidthIndex = (0, _values2.default)((0, _mapValues2.default)(config.columns, column => {\n    return column.width + column.paddingLeft + column.paddingRight;\n  }));\n  let empty;\n  empty = true;\n  return {\n    /**\n     * @param {string[]} row\n     * @returns {undefined}\n     */\n    write: row => {\n      if (row.length !== config.columnCount) {\n        throw new Error('Row cell count does not match the config.columnCount.');\n      }\n\n      if (empty) {\n        empty = false;\n        return create(row, columnWidthIndex, config);\n      } else {\n        return append(row, columnWidthIndex, config);\n      }\n    }\n  };\n};\n\nvar _default = createStream;\nexports.default = _default;\n//# sourceMappingURL=createStream.js.map","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _cloneDeep2 = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\nvar _isUndefined2 = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar _times2 = _interopRequireDefault(require(\"lodash/times\"));\n\nvar _getBorderCharacters = _interopRequireDefault(require(\"./getBorderCharacters\"));\n\nvar _validateConfig = _interopRequireDefault(require(\"./validateConfig\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Merges user provided border characters with the default border (\"honeywell\") characters.\n *\n * @param {Object} border\n * @returns {Object}\n */\nconst makeBorder = (border = {}) => {\n  return Object.assign({}, (0, _getBorderCharacters.default)('honeywell'), border);\n};\n/**\n * Creates a configuration for every column using default\n * values for the missing configuration properties.\n *\n * @param {number} columnCount\n * @param {Object} columns\n * @param {Object} columnDefault\n * @returns {Object}\n */\n\n\nconst makeColumns = (columnCount, columns = {}, columnDefault = {}) => {\n  (0, _times2.default)(columnCount, index => {\n    if ((0, _isUndefined2.default)(columns[index])) {\n      columns[index] = {};\n    }\n\n    columns[index] = Object.assign({\n      alignment: 'left',\n      paddingLeft: 1,\n      paddingRight: 1,\n      truncate: Infinity,\n      wrapWord: false\n    }, columnDefault, columns[index]);\n  });\n  return columns;\n};\n/**\n * @typedef {Object} columnConfig\n * @property {string} alignment\n * @property {number} width\n * @property {number} truncate\n * @property {number} paddingLeft\n * @property {number} paddingRight\n */\n\n/**\n * @typedef {Object} streamConfig\n * @property {columnConfig} columnDefault\n * @property {Object} border\n * @property {columnConfig[]}\n * @property {number} columnCount Number of columns in the table (required).\n */\n\n/**\n * Makes a new configuration object out of the userConfig object\n * using default values for the missing configuration properties.\n *\n * @param {streamConfig} userConfig\n * @returns {Object}\n */\n\n\nconst makeStreamConfig = (userConfig = {}) => {\n  (0, _validateConfig.default)('streamConfig.json', userConfig);\n  const config = (0, _cloneDeep2.default)(userConfig);\n\n  if (!config.columnDefault || !config.columnDefault.width) {\n    throw new Error('Must provide config.columnDefault.width when creating a stream.');\n  }\n\n  if (!config.columnCount) {\n    throw new Error('Must provide config.columnCount.');\n  }\n\n  config.border = makeBorder(config.border);\n  config.columns = makeColumns(config.columnCount, config.columns, config.columnDefault);\n  return config;\n};\n\nvar _default = makeStreamConfig;\nexports.default = _default;\n//# sourceMappingURL=makeStreamConfig.js.map"]}